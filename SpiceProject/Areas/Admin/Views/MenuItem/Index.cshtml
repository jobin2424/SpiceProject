
@model IEnumerable<MenuItem>    
@*if you see in the controller for menuItem, we are passing a list of menuItems from the database*@
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br />
<br />
<div class="border backgroundWhite">
    <div class="row">
        <div class="col-6">
            <h2 class="text-info">Menu Item List</h2>
        </div>
        <div class="col-6 text-right">
            <partial name="_CreateButtonPartial" />
        </div>
    </div>
    <br />
    <div>
        @if (Model.Count() > 0)
        {


            <table class="table table-striped border">
                <tr class="table-secondary">
                    <th>
                        @*This tag helper outputs the name of the field (note the difference between the tag below) IT WORKS BECAUSE WE PUT THE DISPLAY IN THE MODEL*@
                        @*Name of the field has changed to "Category Name" because in the model we added the [display] property to change the name*@
                        @Html.DisplayNameFor(m => m.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(m => m.Price)
                    </th>
                    <th>
                        @Html.DisplayNameFor(m => m.CategoryId)
                    </th>
                    <th>
                        @Html.DisplayNameFor(m => m.SubCategoryId)
                    </th>
                    <th></th>
                    <th></th>
                </tr>
                @foreach (var item in Model)
                {
            <tr>
                <td>
                    @*Outputs names from the Category Model Class easily using this tag helper, note the difference between this and the one above*@
                    @Html.DisplayFor(m => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(m => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(m => item.Category.Name)
                </td>
                <td>
                    @Html.DisplayFor(m => item.SubCategory.Name)
                </td>
                @*Category and subCategory can be aceesed in the for each loop because we added it in the controller when we used eager loading*@
                <td>
                    <partial name="_TableButtonPartial" model="item.Id" />
                </td>
            </tr>
                }
            </table>
        }
        else
        {
            <p>No menu items exists</p>
        }
    </div>
</div>